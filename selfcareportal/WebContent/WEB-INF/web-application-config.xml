<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
    
	xsi:schemaLocation=" 
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/mvc 
           http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.3.xsd"
    default-autowire="byName">
	<!-- default-autowire="byName"，约定优于配置，约定优于配置 -->
	
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd >
	<mvc:resources mapping="/img/**" location="/img/"/>
	<mvc:resources mapping="/js/**" location="/js/"/>
	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/html/**" location="/html/"/-->
	<!--  日志功能 -->
	<aop:aspectj-autoproxy/> 

	
	<!-- 
	①：对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 
	-->
	<context:component-scan base-package="com.ztesoft.zsmart.web.mvc"/>
	<context:component-scan base-package="com.ztesoft.zsmart.bss.esc.mvc"/>
	<context:component-scan base-package="com.ztesoft.zsmart.bss.selfcare.*"/>
	<!-- 
	<context:component-scan base-package="com.ztesoft.zsmart.bss.esc.common.control"/>
	 -->

	<!-- com.ztesoft.zsmart.mvc,com.ztesoft.zsmart.*.mvc -->

	<!-- 
	②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，添加拦截器，类级别的处理器映射 
	-->
	<!-- bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" -->
	<!---->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
        <property name="interceptors">
            <list>
                <bean class="com.ztesoft.zsmart.bss.selfcare.common.web.MvcSessionInterceptor"/>
            </list>
        </property>
	</bean>

	<!-- 
	②：启动Spring MVC的注解功能，完成请求和注解POJO的映射，
	配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射
	-->
	<!--bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                  <list>
                      <value>text/html;charset=UTF-8</value>
                  </list>
              	</property>
            </bean>
		</property>
	</bean>
	
	
	
	<!-- 异常处理 -->
	<bean id="exceptionResolver" class="com.ztesoft.zsmart.bss.selfcare.common.web.MvcExceptionResolver"/>
	
	<!-- 
	③：对模型视图名称的解析，即在模型视图名称添加前后缀
	InternalResourceViewResolver默认的就是JstlView所以这里就不用配置viewClass了 
	-->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		
	</bean>
	
</beans> 